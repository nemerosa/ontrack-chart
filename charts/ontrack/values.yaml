# Default values for ontrack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nemerosa/ontrack
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

management:
  service:
    type: ClusterIP
    port: 8800

ingress:
  enabled: false
#  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths: []
#  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector: {}

# tolerations: []

# affinity: {}

# Local database for testing purpose
postgresql:
  local: true
  # Name of the database to connect to
  postgresqlDatabase: ontrack
  # Credentials to be used
  postgresqlUsername: ontrack
  postgresqlPassword: ontrack
  # For external database
  postgresqlUrl: ""

# Local RabbitMQ for message processing
rabbitmq:
  persistence:
    enabled: false
  auth:
    username: ontrack
    password: ontrack

# Local Elasticsearch engine for testing purpose
elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  antiAffinity: soft
  masterService: ontrack-search
  esJavaOpts: -Xmx512m -Xms512m -XX:-HeapDumpOnOutOfMemoryError
  clusterHealthCheckParams: 'wait_for_status=yellow&timeout=1s'
  esConfig:
    elasticsearch.yml: |
      discovery.zen.minimum_master_nodes: 1
      bootstrap.system_call_filter: "false"
      node.max_local_storage_nodes: 8
      cluster.routing.allocation.disk.threshold_enabled: "false"
      action.auto_create_index: ".*"
  resources:
    requests:
      cpu: 300m
      memory: 1024M
    limits:
      memory: 1024M
  volumeClaimTemplate:
    accessModes: [ ReadWriteOnce ]
    resources:
      requests:
        storage: 5Gi
